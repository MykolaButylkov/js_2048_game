{"version":3,"sources":["scripts/main.js"],"names":["startButton","document","querySelector","fieldCellList","querySelectorAll","fieldRowList","gameScore","messageLose","messageStart","handleStartButton","classList","toggle","createNewCell","colorField","textContent","contains","fieldCellAdder","item","className","startTheGame","addEventListener","loseGame","every","cell","rowI","curentRow","colI","children","add","remove","removeEventListener","emptyFieldNumber","index","loseTheGame","Math","floor","random","length","handleKeyDown","e","key","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","some","body","isSameDigitsLeft","i","currentRow","resultArray","map","child","push","x","splice","indexField","isSameDigitsUp","rowInd","colInd","y","currentChild","colIndex","rowIndex","fieldCell","textCon","emptyCellNum"],"mappings":"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","file":"main.2f32938f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.start');\nconst fieldCellList = document.querySelectorAll('.field-cell');\nconst fieldRowList = document.querySelectorAll('.field-row');\nconst gameScore = document.querySelector('.game-score');\n// const messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\n\nconst handleStartButton = () => {\n  startButton.classList.toggle('restart');\n  createNewCell();\n  createNewCell();\n  colorField();\n\n  startButton.textContent = startButton.classList.contains('restart')\n    ? 'Restart' : 'Start';\n\n  if (startButton.classList.contains('restart')) {\n    fieldCellAdder();\n  } else {\n    for (const item of fieldCellList) {\n      item.className = 'field-cell';\n      item.textContent = '';\n    }\n  }\n\n  if (startButton.textContent === 'Start') {\n    gameScore.textContent = 0;\n  }\n};\n\nfunction startTheGame() {\n  startButton.addEventListener('click', handleStartButton);\n}\n\nfunction loseGame() {\n  if ([...fieldCellList].every(cell => cell.textContent !== '') === false) {\n    return false;\n  }\n\n  for (let rowI = 0; rowI < 4; rowI++) {\n    const curentRow = fieldRowList[rowI];\n\n    for (let colI = 0; colI < 3; colI++) {\n      // eslint-disable-next-line max-len\n      if (+curentRow.children[colI].textContent === +curentRow.children[colI + 1].textContent) {\n        return false;\n      }\n    }\n  }\n\n  for (let rowI = 0; rowI < 3; rowI++) {\n    for (let colI = 0; colI < 4; colI++) {\n      const curentEle = fieldRowList[rowI].children[colI];\n\n      // eslint-disable-next-line max-len\n      if (+curentEle.textContent === +fieldRowList[rowI + 1].children[colI].textContent) {\n        return false;\n      }\n    }\n  }\n\n  messageStart.classList.add('hidden');\n  messageLose.classList.remove('hidden');\n  startButton.removeEventListener('click', handleStartButton);\n  startButton.addEventListener('click', handleStartButton);\n\n  return true;\n};\n\nfunction emptyFieldNumber() {\n  let index;\n\n  const loseTheGame = loseGame();\n\n  if (loseTheGame === false) {\n    do {\n      index = Math.floor(Math.random() * 16);\n    } while (fieldCellList[index].textContent.length !== 0);\n\n    messageLose.classList.add('hidden');\n    messageStart.classList.remove('hidden');\n\n    return index;\n  }\n};\n\nconst handleKeyDown = (e) => {\n  const key = e.key;\n\n  if (startButton.textContent === 'Start'\n    || messageStart.classList.contains('hidden')) {\n    return;\n  }\n\n  switch (key) {\n    case 'ArrowLeft':\n      // Left pressed\n      ArrowLeft();\n      break;\n    case 'ArrowRight':\n      // Right pressed\n      ArrowRight();\n      break;\n    case 'ArrowUp':\n      // Up pressed\n      ArrowUp();\n      break;\n    case 'ArrowDown':\n      // Down pressed\n      ArrowDown();\n      break;\n    default:\n      break;\n  }\n\n  if ([...fieldCellList].some(cell => cell.textContent === '') === true) {\n    createNewCell();\n    colorField();\n  }\n};\n\nfunction fieldCellAdder() {\n  document.body.addEventListener('keydown', handleKeyDown);\n}\n\nfunction ArrowLeft() {\n  if ([...fieldCellList].every(cell => cell.textContent !== '') === true) {\n    let isSameDigitsLeft = false;\n\n    for (let rowI = 0; rowI < 4; rowI++) {\n      const curentRow = fieldRowList[rowI];\n\n      for (let colI = 0; colI < 3; colI++) {\n        // eslint-disable-next-line max-len\n        if (+curentRow.children[colI].textContent === +curentRow.children[colI + 1].textContent) {\n          isSameDigitsLeft = true;\n        }\n      }\n    }\n\n    if (isSameDigitsLeft === false) {\n      loseGame();\n\n      return;\n    }\n  }\n\n  for (let i = 0; i < 4; i++) {\n    const currentRow = fieldRowList[i];\n    const resultArray = [];\n\n    [...currentRow.children].map((child) => {\n      if (child.textContent.length !== 0) {\n        resultArray.push(+child.textContent);\n        child.textContent = '';\n      }\n    });\n\n    for (let x = 0; x < resultArray.length - 1; x++) {\n      if (resultArray[x] === resultArray[x + 1]) {\n        resultArray[x] = resultArray[x] * 2;\n        gameScore.textContent = +gameScore.textContent + resultArray[x];\n\n        resultArray.splice((x + 1), 1);\n        x = 0;\n      }\n    };\n\n    for (let index = 0; index < resultArray.length; index++) {\n      currentRow.children[index].textContent = resultArray[index];\n    }\n  }\n\n  return +gameScore.textContent;\n}\n\nfunction ArrowRight() {\n  if ([...fieldCellList].every(cell => cell.textContent !== '') === true) {\n    let isSameDigitsLeft = false;\n\n    for (let rowI = 0; rowI < 4; rowI++) {\n      const curentRow = fieldRowList[rowI];\n\n      for (let colI = 0; colI < 3; colI++) {\n        // eslint-disable-next-line max-len\n        if (+curentRow.children[colI].textContent === +curentRow.children[colI + 1].textContent) {\n          isSameDigitsLeft = true;\n          break;\n        }\n      }\n    }\n\n    if (isSameDigitsLeft === false) {\n      loseGame();\n\n      return;\n    }\n  }\n\n  for (let i = 0; i < 4; i++) {\n    const currentRow = fieldRowList[i];\n    const resultArray = [];\n\n    [...currentRow.children].map((child) => {\n      if (child.textContent.length !== 0) {\n        resultArray.push(+child.textContent);\n        child.textContent = '';\n      }\n    });\n\n    for (let x = resultArray.length - 1; x >= 0; x--) {\n      if (resultArray[x] === resultArray[x - 1]) {\n        resultArray[x] = resultArray[x] * 2;\n        gameScore.textContent = +gameScore.textContent + resultArray[x];\n\n        resultArray.splice((x - 1), 1);\n        x = 0;\n      }\n    };\n\n    let indexField = 3;\n\n    for (let index = resultArray.length - 1; index >= 0; index--) {\n      currentRow.children[indexField].textContent = resultArray[index];\n      indexField = indexField - 1;\n    }\n  }\n\n  return +gameScore.textContent;\n}\n\nfunction ArrowUp() {\n  if ([...fieldCellList].every(cell => cell.textContent !== '') === true) {\n    let isSameDigitsUp = false;\n\n    for (let rowInd = 0; rowInd < 3; rowInd++) {\n      for (let colInd = 0; colInd < 4; colInd++) {\n        const curentEle = fieldRowList[rowInd].children[colInd];\n\n        // eslint-disable-next-line max-len\n        if (+curentEle.textContent === +fieldRowList[rowInd + 1].children[colInd].textContent) {\n          isSameDigitsUp = true;\n          break;\n        }\n      }\n    }\n\n    if (isSameDigitsUp === false) {\n      loseGame();\n\n      return;\n    }\n  }\n\n  for (let i = 0; i < 4; i++) {\n    const resultArray = [];\n\n    for (let y = 0; y < 4; y++) {\n      const currentChild = fieldRowList[y].children[i];\n\n      if (currentChild.textContent.length !== 0) {\n        resultArray.push(+currentChild.textContent);\n\n        currentChild.textContent = '';\n      }\n    };\n\n    for (let x = resultArray.length - 1; x >= 0; x--) {\n      if (resultArray[x] === resultArray[x - 1]) {\n        resultArray[x] = resultArray[x] * 2;\n        gameScore.textContent = +gameScore.textContent + resultArray[x];\n\n        resultArray.splice((x - 1), 1);\n        x = 0;\n      }\n    };\n\n    for (let index = 0; index < resultArray.length; index++) {\n      fieldRowList[index].children[i].textContent = resultArray[index];\n    }\n  }\n\n  return +gameScore.textContent;\n}\n\nfunction ArrowDown() {\n  if ([...fieldCellList].every(cell => cell.textContent !== '') === true) {\n    let isSameDigitsUp = false;\n\n    for (let colIndex = 0; colIndex < 3; colIndex++) {\n      for (let rowIndex = 0; rowIndex < 4; rowIndex++) {\n        const curentEle = fieldRowList[colIndex].children[rowIndex];\n\n        // eslint-disable-next-line max-len\n        if (+curentEle.textContent === +fieldRowList[colIndex + 1].children[rowIndex].textContent) {\n          isSameDigitsUp = true;\n        }\n      }\n    }\n\n    if (isSameDigitsUp === false) {\n      loseGame();\n\n      return;\n    }\n  }\n\n  for (let i = 0; i < 4; i++) {\n    const resultArray = [];\n\n    for (let y = 0; y < 4; y++) {\n      const currentChild = fieldRowList[y].children[i];\n\n      if (currentChild.textContent.length !== 0) {\n        resultArray.push(+currentChild.textContent);\n\n        currentChild.textContent = '';\n      }\n    };\n\n    for (let x = resultArray.length - 1; x >= 0; x--) {\n      if (resultArray[x] === resultArray[x - 1]) {\n        resultArray[x] = resultArray[x] * 2;\n        gameScore.textContent = +gameScore.textContent + resultArray[x];\n\n        resultArray.splice((x - 1), 1);\n        x = 0;\n      }\n    };\n\n    let indexField = resultArray.length - 1;\n\n    for (let index = 3; index >= 0; index--) {\n      fieldRowList[index].children[i].textContent = resultArray[indexField];\n      indexField = indexField - 1;\n    }\n  }\n\n  if ([...fieldCellList].every(cell => cell.textContent !== '') === true) {\n    loseGame();\n\n    if (messageStart.classList.contains('hidden')) {\n      return;\n    }\n  }\n\n  return +gameScore.textContent;\n}\n\nfunction colorField() {\n  for (const fieldCell of fieldCellList) {\n    const textCon = fieldCell.textContent;\n\n    fieldCell.className = fieldCell.textContent > 0\n      ? `field-cell field-cell--${textCon}`\n      : 'field-cell field-cell--else';\n  }\n}\n\nfunction createNewCell() {\n  const emptyCellNum = emptyFieldNumber();\n\n  if (emptyCellNum >= 0) {\n    fieldCellList[emptyCellNum].classList.add = 'field-cell--2';\n    fieldCellList[emptyCellNum].textContent = '2';\n  }\n}\n\nstartTheGame();\n"]}